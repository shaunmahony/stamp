====================================
Installing STAMP: A very quick guide
====================================

Step 1: Install the GNU Scientific Library.
	Download from http://www.gnu.org/software/gsl/
	Add the 'include' and 'lib' directories to your PATH.

Step 2: Compile the STAMP code.
	Use a command such as the following:

            g++ -O3 -o stamp Motif.cpp Alignment.cpp ColumnComp.cpp \
                PlatformSupport.cpp PlatformTesting.cpp Tree.cpp \
                NeuralTree.cpp MultipleAlignment.cpp RandPSSMGen.cpp \
                ProteinDomains.cpp main.cpp -lm -lgsl -lgslcblas

	Note: if the GSL library is not in the PATH, add the appropriate
	directories using the -L and -I compiler options.

Step 3: Test it out!

	Run STAMP without arguments to see the various command-line options.

	NB: When aligning motifs, a score distribution file for the chosen
	    settings must be provided. A selection of files for commonly
	    chosen settings should have come with STAMP in the "ScoreDists"
	    directory. The files are named using the following abbreviations
	    for alignment settings:
		go: gap-open penalty
		ge: gap-extend penalty
		SWA: Smith-Waterman Alignment
		SWU: Smith-Waterman Ungapped Alignment
		NW: Needleman-Wunsch Alignment
		PCC: Pearson's Correlation Coefficient
		SSD: Sum of squared distance
		KL: Kullback-Liebler
		ALLR: Average Log Likelihood Ratio
		CS: p-value of Chi-square

	If you want to use settings (e.g gap parameters) that aren't supported
	by the ScoreDists files, first generate 10000 random motifs using the
	-genrand setting (I recommend using this with the JASPAR database
	loaded using -tf), and then use the -genscores option with the desired
	alignment settings.

	The file "sample.motifs" contains some test motifs in the format
	accepted by STAMP.
	
	Sample command to see if things are working:

            ./stamp -tf sample.motifs \
                    -sd ../ScoreDists/JaspRand_PCC_SWU.scores \
                    -cc PCC \
                    -align SWU \
                    -ma IR \
                    -printpairwise \
                    -match jaspar.motifs \
                    -out outFile

	The above command runs STAMP with the PCC metric, ungapped local
	alignment, and iterative refinement multiple alignment. Pairwise
	scores within the input set are printed. The input motifs are
	"matched" against JASPAR and the results files all begin with the
	name "outFile".


Formatting motifs for STAMP:
	You can see the format used by STAMO in the file "sample.motifs".
	The format used by STAMP is derived from the format used by the
	TransFac database. To convert other formats into STAMP's format,
	you can use the formatMotifs.pl script as follows:
	  perl formatMotifs.pl inputFile outputFile
	Note that converted motifs will be *appended* to outputFile, not
	overwritten. Various input formats are detected and converted by
	the formatMotifs.pl script. See the list of input formats here:
	http://www.benoslab.pitt.edu/stamp/help.html#input


Please contact me if you run into trouble.

	email:			mahony@psu.edu
	Personal website:	http://mahonylab.org/
	STAMP website:		http://www.benoslab.pitt.edu/stamp/
	Download STAMP:		http://www.benoslab.pitt.edu/services.html#downloads or https://github.com/shaunmahony/stamp
	
